import { Checker } from '../../checker';
import { Fixer } from '../../util/fixer';
import { Config, MatchedNodeTypes, PatternKind } from '../../util/pattern_config';
/**
 * A patternEngine is the logic that handles a specific PatternKind.
 */
export declare abstract class PatternEngine<P extends PatternKind> {
    protected readonly config: Config<P>;
    protected readonly fixer?: Fixer<MatchedNodeTypes[P]> | undefined;
    protected readonly verbose?: boolean | undefined;
    constructor(config: Config<P>, fixer?: Fixer<MatchedNodeTypes[P]> | undefined, verbose?: boolean | undefined);
    abstract register(checker: Checker): void;
}
