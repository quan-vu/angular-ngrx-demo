import * as ts from 'typescript';
import { Checker } from '../../checker';
import { Fixer } from '../fixer';
import { Config, MatchedNodeTypes, PatternKind } from '../pattern_config';
import { PatternEngine } from '../pattern_engines/pattern_engine';
/**
 * The engine for BANNED_PROPERTY_WRITE.
 */
export declare class PropertyWriteEngine extends PatternEngine<PatternKind.BANNED_PROPERTY_WRITE> {
    private readonly matcher;
    constructor(config: Config<PatternKind.BANNED_PROPERTY_WRITE>, fixer?: Fixer<MatchedNodeTypes[PatternKind.BANNED_PROPERTY_WRITE]>, verbose?: boolean);
    register(checker: Checker): void;
    check(c: Checker, n: ts.BinaryExpression): void;
}
