/**
 * Helpers for validating various text string formats.
 */
export declare class StringChecks {
    private static readonly _identifierBadCharRegExp;
    private static readonly _identifierNumberStartRegExp;
    /**
     * Tests whether the input string is safe to use as an ECMAScript identifier without quotes.
     *
     * @remarks
     * For example:
     *
     * ```ts
     * class X {
      *   public okay: number = 1;
      *   public "not okay!": number = 2;
      * }
      * ```
      *
      * A precise check is extremely complicated and highly dependent on the ECMAScript standard version
      * and how faithfully the interpreter implements it.  To keep things simple, `isValidUnquotedIdentifier()`
      * conservatively checks for basic alphanumeric identifiers and returns false otherwise.
      *
      * Based on `StringChecks.explainIfInvalidUnquotedIdentifier()` from TSDoc.
      */
    static isSafeUnquotedMemberIdentifier(identifier: string): boolean;
}
//# sourceMappingURL=StringChecks.d.ts.map